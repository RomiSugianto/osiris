# Generated by Django 3.1.5 on 2021-03-04 14:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import inventory.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AntiVirus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('ESET', 'ESET'), ('BITDEFENDER', 'BITDEFENDER')], max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('username', models.CharField(blank=True, max_length=100, null=True)),
                ('password', models.CharField(blank=True, max_length=100, null=True)),
                ('activation_link', models.CharField(blank=True, max_length=200, null=True)),
                ('activated_at', models.DateField()),
                ('expired_at', models.DateField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ns_code', models.CharField(max_length=200)),
                ('address', models.CharField(max_length=200)),
                ('location', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Hdd',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(max_length=50)),
                ('manufacturer', models.CharField(max_length=50)),
                ('type', models.CharField(choices=[('Barracuda 7200.10', 'Barracuda 7200.10')], max_length=50)),
                ('size', models.IntegerField(choices=[(160, '160')])),
            ],
        ),
        migrations.CreateModel(
            name='Motherboard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(max_length=50)),
                ('manufacturer', models.CharField(max_length=50)),
                ('cpu', models.CharField(choices=[('i5-2500', 'i5-2500')], max_length=50)),
                ('type', models.CharField(choices=[('H61M-E', 'H61M-E')], max_length=50)),
                ('model', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Pc',
            fields=[
                ('pc_number', models.CharField(default=inventory.models.increment_pc_number, max_length=50, primary_key=True, serialize=False)),
                ('hdd', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.hdd')),
                ('motherboard', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.motherboard')),
            ],
        ),
        migrations.CreateModel(
            name='Principal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('owner', models.CharField(max_length=200)),
                ('address', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Psu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(max_length=50)),
                ('manufacturer', models.CharField(choices=[('ARMAGGEDDON', 'Armagedon'), ('CORSAIR', 'Corsair')], max_length=50)),
                ('power', models.CharField(choices=[('450W', '450Watt')], max_length=50)),
                ('model', models.CharField(choices=[('CV450', 'CV450'), ('VOLTRON PRO 475X', 'VOLTRON PRO 475X')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Ram',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(max_length=50)),
                ('manufacturer', models.CharField(max_length=50)),
                ('size', models.IntegerField(default=8)),
                ('type', models.CharField(choices=[('DDR3', 'DDR3')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Ssd',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(max_length=50)),
                ('manufacturer', models.CharField(max_length=50)),
                ('type', models.CharField(max_length=50)),
                ('size', models.IntegerField(choices=[(120, '120'), (250, '250'), (500, '500')])),
            ],
        ),
        migrations.CreateModel(
            name='RequestServer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_number', models.CharField(default=inventory.models.increment_doc_number, max_length=200)),
                ('location_number', models.CharField(default=inventory.models.increment_loc_number, max_length=20)),
                ('implementation_date', models.DateField(verbose_name='date implementation')),
                ('remark', models.CharField(blank=True, choices=[('8GB/120GB', '8GB/120GB'), ('16GB/250GB', '16GB/250GB')], max_length=50, null=True)),
                ('pc_status', models.CharField(blank=True, choices=[('prepare', 'prepare'), ('ready', 'ready'), ('sent', 'sent'), ('completed', 'completed')], max_length=50, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date created')),
                ('updated_at', models.DateTimeField(blank=True, null=True, verbose_name='date updated')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name='date approved')),
                ('document_sent_at', models.DateTimeField(blank=True, null=True, verbose_name='date sent document')),
                ('document_received_back_at', models.DateTimeField(blank=True, null=True, verbose_name='date received back document')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='date approved')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approve', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.customer')),
                ('pc', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.pc')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(choices=[('SALES', 'SALES'), ('DEV', 'DEV'), ('IMP', 'IMP'), ('CS', 'CS')], max_length=100)),
                ('signature', models.ImageField(upload_to='signature/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='pc',
            name='psu',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.psu'),
        ),
        migrations.AddField(
            model_name='pc',
            name='ram1',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ram1', to='inventory.ram'),
        ),
        migrations.AddField(
            model_name='pc',
            name='ram2',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ram2', to='inventory.ram'),
        ),
        migrations.AddField(
            model_name='pc',
            name='ssd',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.ssd'),
        ),
        migrations.CreateModel(
            name='Distributor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('owner', models.CharField(max_length=200)),
                ('address', models.CharField(max_length=200)),
                ('principal', models.ManyToManyField(through='inventory.Customer', to='inventory.Principal')),
            ],
        ),
        migrations.AddField(
            model_name='customer',
            name='distributor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.distributor'),
        ),
        migrations.AddField(
            model_name='customer',
            name='principal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.principal'),
        ),
    ]
